name: pspdev release
run-name: Build a full pspdev release

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  # Fetches all the sources and generates a source tarball
  build-source-tarball:
    runs-on: ubuntu-latest
    outputs:
      sha8: ${{ steps.slug.outputs.sha8 }}
      tarball: ${{ steps.find_tarball.outputs.tarball }}
    steps:
      - name: Install dependencies
        run: sudo apt-get install curl tar
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get short SHA
        id: slug
        run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Fetch sources
        run: |
          make clean
          make build-sources
      - name: Get release filename
        id: find_tarball
        run: |
          file=$(ls pspdev-*-source.tgz)
          echo "Found tarball: $file"
          echo "tarball=$file" >> "$GITHUB_OUTPUT"
      - name: Upload source tarball
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: pspdev-source-${{ steps.slug.outputs.sha8 }}
          path: ${{ steps.find_tarball.outputs.tarball }}

  # Builds an ubuntu-targeted release along with its binary tarball.
  build-ubuntu-release:
    runs-on: ubuntu-24.04
    needs:
      - build-source-tarball
    outputs:
      tarball: ${{ steps.find_tarball.outputs.tarball }}
    steps:
      - name: Install dependencies
        run: sudo apt-get install build-essential curl libgmp-dev libmpfr-dev libmpc-dev bison xz-utils make tar ninja-build libisl-dev meson texinfo bzip2 doxygen libusb-dev libreadline-dev gettext cmake autopoint
      - name: Fetch source tarball artifact
        uses: actions/download-artifact@v4
        with:
          name: pspdev-source-${{ needs.build-source-tarball.outputs.sha8 }}
          path: ./
      - name: Build from source tarball
        run: |
          mkdir build
          export FLAVOUR=ubuntu-24.04
          export PSPDEV=`realpath ./build`
          export PATH=$PATH:$PSPDEV/bin
          tar -xzf ${{ needs.build-source-tarball.outputs.tarball }}
          rm ${{ needs.build-source-tarball.outputs.tarball }}
          make build-all
      - name: Get release filename
        id: find_tarball
        run: |
          file=$(ls pspdev-*.tgz)
          echo "Found tarball: $file"
          echo "tarball=$file" >> "$GITHUB_OUTPUT"
      - name: Upload binary tarball
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: pspdev-ubuntu-22.04-${{ needs.build-source-tarball.outputs.sha8 }}
          path: ${{ steps.find_tarball.outputs.tarball }}

  # Create a new release and attach the previously built assets.
  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - build-source-tarball
      - build-ubuntu-release
    steps:
      - name: Get release version
        id: tagversion
        run: fullref="${{ github.ref }}"; tagversion=${fullref#"refs/tags/"}; echo "tagversion=${tagversion}" >> $GITHUB_OUTPUT
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Fetch source assets
        uses: actions/download-artifact@v4
        with:
          name: pspdev-source-${{ needs.build-source-tarball.outputs.sha8 }}
          path: ./src
      - name: Fetch binary assets
        uses: actions/download-artifact@v4
        with:
          name: pspdev-ubuntu-22.04-${{ needs.build-source-tarball.outputs.sha8 }}
          path: ./bin-ubuntu-24.04

      - name: Upload Release Asset (source)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/${{ needs.build-source-tarball.outputs.tarball }}
          asset_name: ${{ needs.build-source-tarball.outputs.tarball }}
          asset_content_type: application/gzip
      - name: Upload Release Asset (ubuntu 24.04 binary)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin-ubuntu-24.04/${{ needs.build-ubuntu-release.outputs.tarball }}
          asset_name: ${{ needs.build-ubuntu-release.outputs.tarball }}
          asset_content_type: application/gzip


